What Is the Factory Method Pattern?

The Factory Method Pattern is a creational design pattern that provides an interface for creating objects but lets the subclasses or methods decide which class to instantiate.

It helps in achieving:

Loose coupling (client doesn't need to know the exact class being instantiated)
Flexibility and scalability (new types can be added with minimal changes)


How It Works:
 
1. Define a Common Interface or Abstract Class

interface Document {
    void open();
}


* This is the **product interface**.
* All document types (Word, PDF, Excel) implement this interface.
* Allows handling all types of documents using a **common reference** (`Document`).

---

 2. Create Concrete Product Classes

```java
class WordDocument implements Document { ... }
class PdfDocument implements Document { ... }
class ExcelDocument implements Document { ... }
```

* These are **concrete implementations** of the `Document` interface.
* Each class provides its own behavior in the `open()` method.

---

3. Use a Factory to Encapsulate Object Creation

java
class DocumentFactory {
    public static Document createDocument(String type) {
        switch (type.toLowerCase()) {
            case "word": return new WordDocument();
            case "pdf": return new PdfDocument();
            case "excel": return new ExcelDocument();
            default: return null;
        }
    }
}


* This is the Factory Method.
* It hides the instantiation logic from the client.
* Based on the user input (`type`), it returns the correct document object.

---

4. Client Code Calls the Factory Instead of Using new


Document doc = DocumentFactory.createDocument("word");
doc.open();


 The client (Demo class) doesn’t use `new WordDocument()` directly.
Instead, it asks the factory to create the object.
This improves maintainability — if the internal class changes, the client code remains unchanged.


Real-World Analogy

Think of a **document editor app** (like Microsoft Office).
When you click **"New Document"**, you choose: Word, Excel, or PDF.
You don’t create the file manually — the app internally decides **what kind of file object to create**.
